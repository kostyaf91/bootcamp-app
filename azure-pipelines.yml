trigger:
  branches:
    include:
    - master
    - feature/*
pool:
  name: bootcampApp-pool
variables:
- group: prod
- group: repo
stages:
- stage: CI
  jobs:
  - job: BuildAndPushDocker
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'ACR connection'
        repository: 'bootcampapp'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'
    - task: Docker@2
      displayName: Push an image to ACR
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
      inputs:
        containerRegistry: 'ACR connection'
        repository: 'bootcampapp'
        command: 'push'
        tags: 'latest'
- stage: CD
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: Deployment
    displayName: Deployment
    steps:
    - task: KubernetesManifest@0
      displayName: Creating secrets
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'k8s-bootcamp'
        namespace: 'bootcamp'
        secretType: 'generic'
        secretName: 'webapp-secret'
        secretArguments: '--from-literal=PORT=8080 --from-literal=HOST=0.0.0.0 --from-literal=PGHOST=$(PGHOST) --from-literal=PGUSERNAME=$(PGUSERNAME) --from-literal=PGDATABASE=$(PGDATABASE) --from-literal=PGPASSWORD=$(PGPASSWORD) --from-literal=PGPORT=5432 --from-literal=HOST_URL=$(HOST_URL) --from-literal=COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD) --from-literal=NODE_ENV=development --from-literal=OKTA_ORG_URL=$(OKTA_URL) --from-literal=OKTA_CLIENT_ID=$(OKTA_ID) --from-literal=OKTA_CLIENT_SECRET=$(OKTA_SECRET)'
    - task: KubernetesManifest@0
      displayName: Creating imagePullSecret
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'k8s-bootcamp'
        namespace: 'bootcamp'
        secretType: 'dockerRegistry'
        secretName: 'registry-secret'
        dockerRegistryEndpoint: 'ACR connection'
    - task: KubernetesManifest@0
      displayName: Deploying
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'k8s-bootcamp'
        namespace: 'bootcamp'
        manifests: '$(Build.SourcesDirectory)/k8s/webapp.yaml'
        containers: 'kostyaf91bootcampreg.azurecr.io/bootcampapp:latest'
        imagePullSecrets: 'registry-secret'